# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pb.svc.audio import audio_pb2 as pb_dot_svc_dot_audio_dot_audio__pb2


class AudioGenerationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateAudio = channel.unary_unary(
                '/AudioGenerationService/GenerateAudio',
                request_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Requirement.SerializeToString,
                response_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Audio.FromString,
                )
        self.MakingNewJob = channel.unary_unary(
                '/AudioGenerationService/MakingNewJob',
                request_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Request.SerializeToString,
                response_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Audio.FromString,
                )
        self.CheckingJob = channel.unary_unary(
                '/AudioGenerationService/CheckingJob',
                request_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Checking.SerializeToString,
                response_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Job.FromString,
                )
        self.SendingResult = channel.unary_unary(
                '/AudioGenerationService/SendingResult',
                request_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Audio.SerializeToString,
                response_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Job.FromString,
                )


class AudioGenerationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateAudio(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakingNewJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckingJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendingResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AudioGenerationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateAudio': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAudio,
                    request_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Requirement.FromString,
                    response_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Audio.SerializeToString,
            ),
            'MakingNewJob': grpc.unary_unary_rpc_method_handler(
                    servicer.MakingNewJob,
                    request_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Request.FromString,
                    response_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Audio.SerializeToString,
            ),
            'CheckingJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckingJob,
                    request_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Checking.FromString,
                    response_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Job.SerializeToString,
            ),
            'SendingResult': grpc.unary_unary_rpc_method_handler(
                    servicer.SendingResult,
                    request_deserializer=pb_dot_svc_dot_audio_dot_audio__pb2.Audio.FromString,
                    response_serializer=pb_dot_svc_dot_audio_dot_audio__pb2.Job.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AudioGenerationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AudioGenerationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateAudio(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AudioGenerationService/GenerateAudio',
            pb_dot_svc_dot_audio_dot_audio__pb2.Requirement.SerializeToString,
            pb_dot_svc_dot_audio_dot_audio__pb2.Audio.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakingNewJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AudioGenerationService/MakingNewJob',
            pb_dot_svc_dot_audio_dot_audio__pb2.Request.SerializeToString,
            pb_dot_svc_dot_audio_dot_audio__pb2.Audio.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckingJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AudioGenerationService/CheckingJob',
            pb_dot_svc_dot_audio_dot_audio__pb2.Checking.SerializeToString,
            pb_dot_svc_dot_audio_dot_audio__pb2.Job.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendingResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AudioGenerationService/SendingResult',
            pb_dot_svc_dot_audio_dot_audio__pb2.Audio.SerializeToString,
            pb_dot_svc_dot_audio_dot_audio__pb2.Job.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
